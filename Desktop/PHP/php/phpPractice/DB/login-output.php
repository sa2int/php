<?php session_start() ?><!--セッションを使う為に先頭に貼り付ける（はりつける）-->
<?php require '../header.php'; ?>
<?php require 'menu.php'; ?>
<?php include "dbase.php"; ?><!--PDOでデータを接続-->
<?php　//다른 유저마다 데이터를 관리할수있다　//세션은 각 유저의 고유 데이터를 저장하기위해 하는것
unset($_SESSION['customer']); //顧客情報をcustomerに格納すること//　unsetは同名のユーザーがログインするときセッションから顧客情報を削除する状態。customerの要素だけ削除
$sql=$pdo->prepare('select * from customer where login=? and password=?');//ログイン、ログアウトの検索為にＳＱＬ文を準備。prepareメソッドに渡します
$sql->execute([$_REQUEST['login'], $_REQUEST['password']]);//executeメソッドで実する。？の部分は[$_REQUEST['login'], $_REQUEST['password']のパラメータが行く。これをexecuteに渡します。
foreach ($sql->fetchAll() as $row) {//executeメソッドで実行したことをfetchAll()メソッドで取得できる。
  $_SESSION['customer']=[
    'id'=>$row['id'], 'name'=>$row['name'],
     'address'=>$row['address'], 'login'=>$row['login'],
      'password'=>$row['password']];  //  変数$rowに入れたデータを$_SESSION['customer']代入する。
}
if(isset($_SESSION['customer'])){　//issetを使って変数に定義されているか確認する。
  echo 'いらっしゃいませ', $_SESSION['customer']['name'], 'さん。';
}else{
  echo 'ログイン名またはパスワードが違います。';
}

/*
セッションの動きについて
１．ユーザーがサイトのページを開きます。
２．ブラウザがウェーブサーバにリクエストを送信する。
３．ＷＥＢサーバがＷＥＢアプリケーションを実行する。
４．ＷＥＢアプリケーションは「セッションＩＤ」と「セッションデータ」を作成しｍす。
ＰＨＰは＄＿ＳＥＳＳＩＯＮを使います。
５．セッションデータはセッションＩＤをＷＥＢサーバに渡します。
６．ＷＥＢサーバはセッションＩＤを、レスポンシブのー部としてブラウザに送信する。
７．ブラウザは受信したセッションＩＤを、クライアントサイドに保存します。
セッションＩＤの送信と保存には「クッキー」と呼ばれるし仕組みがつかわれます。
*/
/*
１．最初に、ユーザーがログイン名とパスワードを入力します。
２．ログイン名パスワードは、リクエストパラメータとしてＷＥＢサーバに送信されます。
３．ＷＥＢサーバはＷＥＢアプリケーションを起動し、リクエストパラメータとしてログイン名とパスワードを渡します。
４．ＷＥＢアプリケーションはログイン名とパスワードの組み合わせがデータベースに登録されているかどうかを調べます。
５．登録されていたら、セッションＩＤとセッションデータを作成します。今回はセッションデータとして顧客情報を格納します。
６．ＷＥＢアプリケーションはセッションＩＤをＷＥＢサーバに渡します。
７．ＷＥＢサーバがセッションＩＤを含むレスポンスをブラウザに送信します。
８．ブラウザはセッションＩＤを保存します。
再びユーザーがページを開くと、ブラウザはセッションＩＤをＷＥＢサーバに送信します。
セッションＩＤを用いて、ＷＥＢアプリケーションはセッションデータを取得することができます。
*/
 ?>
<?php require '../footer.php'; ?>
